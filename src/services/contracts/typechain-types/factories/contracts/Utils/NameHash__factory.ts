/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  NameHash,
  NameHashInterface,
} from "../../../contracts/Utils/NameHash";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "domain",
        type: "string",
      },
    ],
    name: "getDomainHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610595806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806307b5c38514610030575b600080fd5b61004a60048036038101906100459190610329565b610060565b604051610057919061038b565b60405180910390f35b600061008c826040516020016100769190610417565b6040516020818303038152906040526000610093565b9050919050565b6000818351116100a8576000801b905061010d565b60006100b48484610113565b90506100d784600183866100c89190610467565b6100d29190610467565b610093565b6100e28585846101a3565b6040516020016100f39291906104bc565b604051602081830303815290604052805190602001209150505b92915050565b6000805b835181846101259190610467565b141580156101815750602e60f81b8482856101409190610467565b81518110610151576101506104e8565b5b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614155b1561019957808061019190610517565b915050610117565b8091505092915050565b6000835182846101b39190610467565b11156101be57600080fd5b818360208601012090509392505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610236826101ed565b810181811067ffffffffffffffff82111715610255576102546101fe565b5b80604052505050565b60006102686101cf565b9050610274828261022d565b919050565b600067ffffffffffffffff821115610294576102936101fe565b5b61029d826101ed565b9050602081019050919050565b82818337600083830152505050565b60006102cc6102c784610279565b61025e565b9050828152602081018484840111156102e8576102e76101e8565b5b6102f38482856102aa565b509392505050565b600082601f8301126103105761030f6101e3565b5b81356103208482602086016102b9565b91505092915050565b60006020828403121561033f5761033e6101d9565b5b600082013567ffffffffffffffff81111561035d5761035c6101de565b5b610369848285016102fb565b91505092915050565b6000819050919050565b61038581610372565b82525050565b60006020820190506103a0600083018461037c565b92915050565b600081519050919050565b600081905092915050565b60005b838110156103da5780820151818401526020810190506103bf565b60008484015250505050565b60006103f1826103a6565b6103fb81856103b1565b935061040b8185602086016103bc565b80840191505092915050565b600061042382846103e6565b915081905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006104728261042e565b915061047d8361042e565b925082820190508082111561049557610494610438565b5b92915050565b6000819050919050565b6104b66104b182610372565b61049b565b82525050565b60006104c882856104a5565b6020820191506104d882846104a5565b6020820191508190509392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006105228261042e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361055457610553610438565b5b60018201905091905056fea26469706673582212206e2e0506d149c06ad2ae2d3d08eca7b8e1f9354fc1ae3ab3eec52236d52b82b264736f6c63430008140033";

type NameHashConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NameHashConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NameHash__factory extends ContractFactory {
  constructor(...args: NameHashConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      NameHash & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NameHash__factory {
    return super.connect(runner) as NameHash__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NameHashInterface {
    return new Interface(_abi) as NameHashInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NameHash {
    return new Contract(address, _abi, runner) as unknown as NameHash;
  }
}
